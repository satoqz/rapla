name: build-push

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-rust:
    strategy:
      matrix:
        target:
          - arch: x86_64
            container-arch: amd64
          - arch: aarch64
            container-arch: arm64
            packages: gcc-aarch64-linux-gnu

    runs-on: ubuntu-latest

    env:
      BIN: rapla-ical-proxy-${{ matrix.target.container-arch }}
      RUST_TARGET: ${{ matrix.target.arch }}-unknown-linux-musl
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Add Rust toolchain
        run: rustup target add ${{ env.RUST_TARGET }}

      - name: Install OS dependencies
        run: sudo apt-get install -y --no-install-recommends ${{ matrix.target.packages }}
        if: matrix.target.packages

      - name: Cache Rust build
        uses: Swatinem/rust-cache@82a92a6e8fbeee089604da2575dc567ae9ddeaab # v2.7.5
        with:
          key: ${{ matrix.target.arch }}

      - name: Build
        run: |
          cargo build --locked --release \
            --target ${{ env.RUST_TARGET }} \
            --config target.${{ env.RUST_TARGET }}.linker=\"${{ matrix.target.arch }}-linux-gnu-gcc\"

      - name: Rename binary
        run: mv target/${{ env.RUST_TARGET }}/release/rapla-ical-proxy ${{ env.BIN }}

      - name: Upload binary
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: ${{ env.BIN }}
          path: ${{ env.BIN }}

  build-push-container:
    needs: build-rust

    permissions:
      contents: read
      packages: write
      id-token: write

    runs-on: ubuntu-latest

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1

      - name: Extract container image metadata
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        id: meta

      - name: Select tags
        run: |
          if [[ "${{ github.event_name }}" = "pull_request" ]]; then
            echo "tags=${{ steps.meta.outputs.tags }}" > "$GITHUB_OUTPUT"
          else
            echo "tags=${{ steps.meta.outputs.tags }},${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" > "$GITHUB_OUTPUT"
          fi
        id: tags

      - name: Download binaries
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.8.1
        with:
          path: bin
          pattern: rapla-ical-proxy-*
          merge-multiple: true

      - name: Chmod binaries
        run: chmod +x bin/*

      - name: Log into registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name != 'pull_request'

      - name: Build and push container image
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          file: Dockerfile
          context: bin
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.tags.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
        id: build-push
